#include "arduino_secrets.h"

/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/a587e668-a412-4cc8-a3cc-653c7152be5a 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  int holdingRegister40001;
  int holdingRegister40002;
  bool discreate00001;
  bool discreate00002;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(115200);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);
  
  Serial2.begin(9600, SERIAL_8N1, RXD2, TXD2);  // Komunikasi ke ESP-01
  Serial.println("ESP32 Serial2 Modbus Communication Started");

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  
}

void loop() {
  ArduinoCloud.update();
  // Your code here
  // Terima dari ESP-01
  while (Serial2.available()) {
    String line = Serial2.readStringUntil('\n');
    line.trim();

    if (line.startsWith("H:")) {
      holdingRegister40002 = line.substring(2).toInt();
      Serial.print("Diterima dari ESP-01 - Holding Register 40002: ");
      Serial.println(holdingRegister40002);
    }
    else if (line.startsWith("C:")) {
      discreate00002 = line.substring(2).toInt() > 0;
      Serial.print("Diterima dari ESP-01 - Coil 00002: ");
      Serial.println(discreate00002 ? "ON" : "OFF");
    }
  }

  // Kirim ke ESP-01 setiap 1 detik
  static uint32_t lastSend = 0;
  if (millis() - lastSend > 1000) {
    lastSend = millis();

    Serial2.print("HR40001:");
    Serial2.println(holdingRegister40001);

    Serial2.print("C00001:");
    Serial2.println(discreate00001 ? 1 : 0);

    Serial.println("Data dikirim ke ESP-01:");
    Serial.print("  HR40001: "); Serial.println(holdingRegister40001);
    Serial.print("  C00001 : "); Serial.println(discreate00001 ? "ON" : "OFF");
  }
  
}




/*
  Since HoldingRegister40001 is READ_WRITE variable, onHoldingRegister40001Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onHoldingRegister40001Change()  {
  
}

/*
  Since HoldingRegister40002 is READ_WRITE variable, onHoldingRegister40002Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onHoldingRegister40002Change()  {
  
}

/*
  Since Discreate00001 is READ_WRITE variable, onDiscreate00001Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onDiscreate00001Change()  {
  
}

/*
  Since Discreate00002 is READ_WRITE variable, onDiscreate00002Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onDiscreate00002Change()  {
  
}




